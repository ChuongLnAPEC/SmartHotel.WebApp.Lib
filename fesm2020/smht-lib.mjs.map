{"version":3,"file":"smht-lib.mjs","sources":["../../../projects/smht-lib/src/lib/services/common-smht-config.service.ts","../../../projects/smht-lib/src/lib/services/common-smht.service.ts","../../../projects/smht-lib/src/lib/smht-lib.module.ts","../../../projects/smht-lib/src/smht-lib.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommonSmhtConfigService {\r\n  private config: any = {};\r\n\r\n  setConfig(config: any): void {\r\n    this.config = config;\r\n  }\r\n\r\n  getConfig(key: string): any {\r\n    if (!this.config[key]) {\r\n      throw new Error(`Configuration key \"${key}\" is not set.`);\r\n    }\r\n    return this.config[key];\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { BehaviorSubject, from, Observable, of } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { CommonSmhtConfigService } from './common-smht-config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonSmhtService {\r\n  private systemDateSubject = new BehaviorSubject<Date | null>(null);\r\n  public systemDate$: Observable<Date> = this.systemDateSubject.asObservable().pipe(\r\n    switchMap((date) => {\r\n      if (date === null) {\r\n        return this.getDate().pipe(\r\n          tap(fetchedDate => this.systemDateSubject.next(this.modifyDateByUTC(new Date(fetchedDate.dataResult), true)))\r\n        );\r\n      } else {\r\n        return of(date);\r\n      }\r\n    })\r\n  );\r\n\r\n  private showLoadingSubject = new BehaviorSubject<boolean>(false);\r\n  showLoadingObservable = this.showLoadingSubject.asObservable();\r\n\r\n  private messageSocketSubject = new BehaviorSubject<any>(null);\r\n  public messageSocket$: Observable<any> = this.messageSocketSubject.asObservable();\r\n\r\n  private languageSubject = new BehaviorSubject<string>(localStorage.getItem('language') || 'en');\r\n  public language$: Observable<string> = this.languageSubject.asObservable();\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private configService: CommonSmhtConfigService,\r\n    @Inject('CommonSmhtConfigService') private config: any\r\n  ) {\r\n    this.configService.setConfig(this.config);\r\n  }\r\n\r\n  getApiUrl(): string {\r\n    return this.configService.getConfig('apiUrl');\r\n  }\r\n  setLanguage(lang: string) {\r\n    this.languageSubject.next(lang);\r\n  }\r\n  showLoading(isLoading: boolean) {\r\n    this.showLoadingSubject.next(isLoading);\r\n  }\r\n\r\n  getDate(): Observable<any> {\r\n    return this.httpClient.get(this.getApiUrl() + '/api/sys/getWorkingDate');\r\n  }\r\n\r\n  updateSystemDate(): void {\r\n    this.getDate().pipe(\r\n      tap(fetchedDate => this.systemDateSubject.next(fetchedDate.dataResult))\r\n    ).subscribe();\r\n  }\r\n\r\n  modifyDateByUTC(date: any, isGetMethod: boolean) {\r\n    const localUTC = (new Date().getTimezoneOffset() / 60);\r\n    const data = new Date(date);\r\n    data.setHours(data.getHours() + (!isGetMethod ? -localUTC : localUTC));\r\n    return data;\r\n  }\r\n\r\n  getMessageSocket(data: any) {\r\n    this.messageSocketSubject.next(data);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonSmhtConfigService } from './services/common-smht-config.service';\n\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n  ],\n  exports: [\n  ]\n})\nexport class SmhtLibModule { \n  static forRoot(config: any): ModuleWithProviders<SmhtLibModule> {\n    return {\n      ngModule: SmhtLibModule,\n      providers: [\n        {\n          provide: 'CommonSmhtConfig',\n          useValue: config,\n        },\n        CommonSmhtConfigService,\n      ],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}